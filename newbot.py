import asyncio
import logging
import random
import aiohttp
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

TOKEN = "7581820794:AAFStUHCR8LROea3cp9e-indtWCnw3jH7QM"

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç üëã"), KeyboardButton(text="–ö–∞–∫ –¥–µ–ª–∞? ü§î")],
        [KeyboardButton(text="–ü–æ–º–æ—â—å ‚ÑπÔ∏è"), KeyboardButton(text="–®—É—Ç–∫–∞ üòÜ"), KeyboardButton(text="–§–∞–∫—Ç üìö")],
        [KeyboardButton(text="–ö–æ—Ç–∏–∫ üê±")]
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(F.text == "/start")
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç ü§ñ. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(F.text == "/help")
async def help_command(message: Message):
    await message.answer("–Ø –º–æ–≥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —à—É—Ç–∫–∏ –∏ —Ñ–∞–∫—Ç—ã, –∞ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ—Ç–∏–∫–æ–≤!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
@dp.message(F.text == "/about")
async def about_command(message: Message):
    await message.answer("–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ñ–æ—Ç–æ –∏ —Å—Ç–∏–∫–µ—Ä—ã! üòä")

# –°–ø–∏—Å–æ–∫ —à—É—Ç–æ–∫
jokes = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç—ë–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç–æ–≤–∞—è –ø—Ä–∏–≤–ª–µ—á—ë—Ç –±–∞–≥–∏! üòÜ",
    "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∞–º—ã–π –≤–µ—Å—ë–ª—ã–π? Python, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —à–∏–ø–∏—Ç! üêç"
]

# –°–ø–∏—Å–æ–∫ —Ñ–∞–∫—Ç–æ–≤
facts = [
    "Python –±—ã–ª –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å —à–æ—É 'Monty Python', –∞ –Ω–µ –∑–º–µ–∏! üêç",
    "–°–∞–º—ã–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä –Ω–∞–∑—ã–≤–∞–ª—Å—è ENIAC –∏ –∑–∞–Ω–∏–º–∞–ª —Ü–µ–ª—É—é –∫–æ–º–Ω–∞—Ç—É! üíæ"
]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@dp.message()
async def reply_buttons(message: Message):
    if message.text == "–ü—Ä–∏–≤–µ—Ç üëã":
        await message.answer("–ü—Ä–∏–≤–µ—Ç! üòä")
    elif message.text == "–ö–∞–∫ –¥–µ–ª–∞? ü§î":
        await message.answer("–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! –ê —É —Ç–µ–±—è?")
    elif message.text == "–ü–æ–º–æ—â—å ‚ÑπÔ∏è":
        await message.answer("–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!")
    elif message.text == "–®—É—Ç–∫–∞ üòÜ":
        await message.answer(random.choice(jokes))
    elif message.text == "–§–∞–∫—Ç üìö":
        await message.answer(random.choice(facts))
    elif message.text == "–ö–æ—Ç–∏–∫ üê±":
        await send_cat(message)
    else:
        await echo_all(message)  # –ü–µ—Ä–µ–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ö–æ-—Ñ—É–Ω–∫—Ü–∏—é

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@dp.message(F.photo)
async def handle_photo(message: Message):
    await message.answer("–ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ! üì∏")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∏–∫–µ—Ä–æ–≤
@dp.message(F.sticker)
async def handle_sticker(message: Message):
    await message.answer("–ö–ª–∞—Å—Å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä! üòÉ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message(F.voice)
async def handle_voice(message: Message):
    await message.answer("–û–≥–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ! –ñ–∞–ª—å, —á—Ç–æ —è –Ω–µ —É–º–µ—é —Å–ª—É—à–∞—Ç—å... –ü–æ–∫–∞ üòú")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ
@dp.message(F.video)
async def handle_video(message: Message):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ–µ –≤–∏–¥–µ–æ! üé¨")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞
async def send_cat(message: Message):
    url = "https://api.thecatapi.com/v1/images/search"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            cat_data = await response.json()
            cat_url = cat_data[0]["url"]
            await message.answer_photo(cat_url)

# –≠—Ö–æ-–±–æ—Ç ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–º –Ω–∞ –≤—Å—ë, —á—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞
@dp.message()
async def echo_all(message: Message):
    await message.answer(message.text)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())